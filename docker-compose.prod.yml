version: '3.8'

services:
  # MongoDB Database Service - Production Configuration
  mongodb:
    image: mongo:7-jammy
    container_name: payment-later-mongodb-prod
    restart: always
    ports:
      - "127.0.0.1:27017:27017"  # Bind to localhost only for security
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo_root_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_root_password
      MONGO_INITDB_DATABASE: payment_later_prod
    volumes:
      - mongodb_data_prod:/data/db
      - mongodb_config_prod:/data/configdb
      - mongodb_logs_prod:/var/log/mongodb
      - ./docker/mongo-init-prod:/docker-entrypoint-initdb.d:ro
    networks:
      - payment-later-network
    secrets:
      - mongo_root_username
      - mongo_root_password
    command: ["mongod", "--auth", "--bind_ip_all", "--logpath", "/var/log/mongodb/mongod.log", "--logappend"]
    healthcheck:
      test: ["CMD", "mongosh", "--authenticationDatabase", "admin", "-u", "$$(cat /run/secrets/mongo_root_username)", "-p", "$$(cat /run/secrets/mongo_root_password)", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # PaymentLaterAPI Application Service - Production Configuration
  payment-later-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: payment-later-api-prod
    restart: always
    ports:
      - "127.0.0.1:1010:1010"  # Bind to localhost only, use reverse proxy
    environment:
      # Database Configuration - secrets are mounted as files
      MONGODB_URI: mongodb://admin:$$(cat /run/secrets/mongodb_password)@mongodb:27017/payment_later_prod?authSource=admin&ssl=false&connectTimeoutMS=5000&socketTimeoutMS=5000
      MONGODB_DATABASE: payment_later_prod
      
      # JWT Configuration - Use secret file
      JWT_SECRET_BASE64: $$(cat /run/secrets/jwt_secret)
      
      # Mail Configuration - Use secret files  
      MAIL_SERVER_EMAIL: $$(cat /run/secrets/mail_server_email)
      MAIL_SERVER_PASSWORD: $$(cat /run/secrets/mail_server_password)
      
      # Spring Profile
      SPRING_PROFILES_ACTIVE: prod
      
      # Production JVM Settings
      JAVA_OPTS: >
        -Xms512m 
        -Xmx1024m 
        -XX:+UseG1GC 
        -XX:+UseContainerSupport 
        -XX:MaxRAMPercentage=80.0
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:HeapDumpPath=/app/logs/
        -Dspring.profiles.active=prod
        -Djava.security.egd=file:/dev/./urandom
      
      # Logging
      LOGGING_LEVEL_ROOT: WARN
      LOGGING_LEVEL_COM_BLAISE: INFO
      LOGGING_PATTERN_CONSOLE: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
      
      # Security
      SERVER_ERROR_INCLUDE_STACKTRACE: never
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics
      
    secrets:
      - jwt_secret
      - mail_server_email
      - mail_server_password
      - mongodb_password
    volumes:
      - app_logs_prod:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - payment-later-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1010/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # Nginx Reverse Proxy (Optional - for production load balancing)
  nginx:
    image: nginx:1.25-alpine
    container_name: payment-later-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs_prod:/var/log/nginx
    depends_on:
      - payment-later-api
    networks:
      - payment-later-network
    profiles:
      - nginx
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

# Production Secrets - These should be created externally
secrets:
  mongo_root_username:
    external: true
  mongo_root_password:
    external: true
  mongodb_password:
    external: true
  jwt_secret:
    external: true
  mail_server_email:
    external: true
  mail_server_password:
    external: true

volumes:
  mongodb_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/payment-later/data/mongodb
  mongodb_config_prod:
    driver: local
  mongodb_logs_prod:
    driver: local
  app_logs_prod:
    driver: local
  nginx_logs_prod:
    driver: local

networks:
  payment-later-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16